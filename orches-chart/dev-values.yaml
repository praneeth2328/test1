# Default values for orches-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 2

image:
  name: 727231120957.dkr.ecr.us-west-2.amazonaws.com/data-science/orchestrator:592be69
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 1000

service:
  type: NodePort
  port: 5000
  targetPort: 5000

ingress:
  enabled: false
  className: "alb"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: api.dev.ai.umbrella.com
      paths:
        - path: /health-check
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 3
    memory: 2500Mi
  requests:
    cpu: 1
    memory: 1800Mi

livenessProbe:
  httpGet:
    path: /health
    port: 5000
    scheme: HTTP
  initialDelaySeconds: 90
  periodSeconds: 300
  timeoutSeconds: 60
  failureThreshold: 3
  successThreshold: 1
readinessProbe:
  httpGet:
    path: /health
    port: 5000
    scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 120
  timeoutSeconds: 50
  failureThreshold: 4
  successThreshold: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Role configuration
role:
  create: false
  name: ""
  rules:
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["get", "list"]

# # RoleBinding configuration
roleBinding:
  create: false
  name: ""
  roleName: ""
  subjects:
    - kind: ServiceAccount
      name: default
      namespace: default

# # NetworkPolicy configuration
networkPolicy:
  create: true
  name: ""
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: my-app
      ports:
        - protocol: TCP
          port: 5000
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: my-app
      ports:
        - protocol: TCP
          port: 5000
